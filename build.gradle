plugins{
    id 'java-library'
}

def now_version = "0.1.1"

allprojects {
    apply {
        plugin 'java-library'
    }

    group = 'top.redstarmc.plugin.velocitytitle'

    version = now_version

    repositories {
        mavenCentral()  //Maven 存储库
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:23.0.0'
        implementation 'com.moandjiezana.toml:toml4j:0.7.2'
    }


    // 编译 固定 UTF-8 编码
    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
    }
    // Javadoc 固定 UTF-8 编码
    tasks.withType(Javadoc).tap {
        configureEach {
            options.encoding = "UTF-8"
        }
    }

    // 固定使用 Java19
    java {
        toolchain.languageVersion.set(JavaLanguageVersion.of(19))
    }

}

subprojects {
    tasks.withType(Jar).tap {
        configureEach {
            // 设置所有子模块 JAR 的输出根目录
            destinationDirectory.set(rootProject.file("${rootProject.rootDir}/build/jars"))
            // 可选：自定义文件名（包含模块名）
        }
    }
}

tasks.register('createAllJar', Jar) {
    group = 'build'

    archiveBaseName.set('VelocityTitle')
    archiveVersion.set(now_version)

    from {
        project.rootProject.subprojects.collectMany { subproject ->
            def sourceSet = subproject.sourceSets.main

            // 收集类文件和资源文件
            [
                    // 类文件目录（可能包含多个）
                    sourceSet.output.classesDirs.files,
                    // 资源目录（单个）
                    sourceSet.output.resourcesDir
            ].flatten().findAll { it != null && it.exists() }
        }
    }

    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', '*.MF'
}

tasks.named('build') {
    finalizedBy('createAllJar')
}
